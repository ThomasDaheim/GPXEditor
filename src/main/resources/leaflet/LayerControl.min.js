function changeMapLayerUrl(a,c){window["layer"+a].setUrl(c)}var HikeBike_HillShading=L.tileLayer("https://tiles.wmflabs.org/hillshading/{z}/{x}/{y}.png",{maxZoom:18,attribution:"&copy; OpenStreetMap"});HikeBike_HillShading.setZIndex(6);var OpenMapSurfer_ContourLines=L.tileLayer("https://maps.heigit.org/openmapsurfer/tiles/asterc/webmercator/{z}/{x}/{y}.png",{maxZoom:18,attribution:"Imagery from GIScience Research Group @ University of Heidelberg | Map data ASTER GDEM"});OpenMapSurfer_ContourLines.setZIndex(97);
var Hydda_RoadsAndLabels=L.tileLayer("https://{s}.tile.openstreetmap.se/hydda/roads_and_labels/{z}/{x}/{y}.png",{maxZoom:18,attribution:"Tiles courtesy of OpenStreetMap Sweden &mdash; Map data &copy; OpenStreetMap contributors"});Hydda_RoadsAndLabels.setZIndex(98);var OpenRailwayMap=L.tileLayer("https://{s}.tiles.openrailwaymap.org/standard/{z}/{x}/{y}.png",{maxZoom:18,attribution:"Map data: &copy; OpenStreetMap contributors | Map style: &copy; OpenRailwayMap (CC-BY-SA)"});OpenRailwayMap.setZIndex(99);
var HikingTrails=L.tileLayer("https://tile.waymarkedtrails.org/hiking/{z}/{x}/{y}.png",{maxZoom:18,attribution:"&copy; http://waymarkedtrails.org, Sarah Hoffmann (CC-BY-SA)"});HikingTrails.setZIndex(100);var CyclingTrails=L.tileLayer("https://tile.waymarkedtrails.org/cycling/{z}/{x}/{y}.png",{maxZoom:18,attribution:"&copy; http://waymarkedtrails.org, Sarah Hoffmann (CC-BY-SA)"});CyclingTrails.setZIndex(101);
var MTBTrails=L.tileLayer("https://tile.waymarkedtrails.org/mtb/{z}/{x}/{y}.png",{maxZoom:18,attribution:"&copy; http://waymarkedtrails.org, Sarah Hoffmann (CC-BY-SA)"});MTBTrails.setZIndex(102);var SlopeTrails=L.tileLayer("https://tile.waymarkedtrails.org/slopes/{z}/{x}/{y}.png",{maxZoom:18,attribution:"&copy; http://waymarkedtrails.org, Sarah Hoffmann (CC-BY-SA)"});SlopeTrails.setZIndex(103);
const overlaysList={ITERATE_FIRST:0,CONTOUR_LINES:0,HILL_SHADING:1,HIKING_TRAILS:2,CYCLING_TRAILS:3,MTB_TRAILS:4,SLOPE_TRAILS:5,ROADS_AND_LABELS:6,RAILWAY_LINES:7,ITERATE_LAST:7,properties:{0:{name:"Contour Lines",layer:OpenMapSurfer_ContourLines,visible:!0},1:{name:"Hill Shading",layer:HikeBike_HillShading,visible:!0},2:{name:"Hiking Trails",layer:HikingTrails,visible:!0},3:{name:"Cycling Trails",layer:CyclingTrails,visible:!0},4:{name:"MTB Trails",layer:MTBTrails,visible:!0},5:{name:"Slopes",layer:SlopeTrails,
visible:!0},6:{name:"Roads and Labels",layer:Hydda_RoadsAndLabels,visible:!0},7:{name:"Railways",layer:OpenRailwayMap,visible:!0}}};function getKnownOverlayNames(){var a=[];for(let c=overlaysList.ITERATE_FIRST;c<=overlaysList.ITERATE_LAST;c++)a.push(overlaysList.properties[c].name);return a}
L.TileLayer.QuadKeyTileLayer=L.TileLayer.extend({getTileUrl:function(a){return L.Util.template(this._url,{s:this._getSubdomain(a),q:this._quadKey(a.x,a.y,this._getZoomForUrl())})},_quadKey:function(a,c,b){for(var e=[];0<b;b--){var d="0",f=1<<b-1;0!=(a&f)&&d++;0!=(c&f)&&(d++,d++);e.push(d)}return e.join("")}});
controlLayer.addBaseLayer(new L.TileLayer.QuadKeyTileLayer("https://ecn.t{s}.tiles.virtualearth.net/tiles/r{q}?g=864&mkt=en-gb&lbl=l1&stl=h&shading=hill&n=z",{subdomains:"0123",minZoom:3,maxZoom:19,attribution:"Bing - map data copyright Microsoft and its suppliers"}),"Bing Maps");
controlLayer.addBaseLayer(new L.TileLayer.QuadKeyTileLayer("https://ecn.t{s}.tiles.virtualearth.net/tiles/a{q}?g=737&n=z",{subdomains:"0123",minZoom:3,maxZoom:19,attribution:"Bing - map data copyright Microsoft and its suppliers"}),"Bing Aerial");controlLayer.addBaseLayer(L.tileLayer("https://opentopomap.org/{z}/{x}/{y}.png",{maxNativeZoom:17,maxZoom:18,attribution:"Map data: &copy; OpenTopoMap.org"}),"OpenTopoMap");
controlLayer.addBaseLayer(L.tileLayer("http://sgx.geodatenzentrum.de/wmts_topplus_open/tile/1.0.0/web/default/WEBMERCATOR/{z}/{y}/{x}.png",{maxNativeZoom:18,maxZoom:18,attribution:"Map data: &copy; geodatenzentrum.de"}),"DE: TopPlusOpen");
controlLayer.addBaseLayer(L.tileLayer("http://www.ign.es/wmts/mapa-raster?service=WMTS&request=GetTile&version=1.0.0&format=image/jpeg&layer=MTN&tilematrixset=GoogleMapsCompatible&style=default&tilematrix={z}&tilerow={y}&tilecol={x}",{maxNativeZoom:17,maxZoom:18,attribution:"Map data: &copy; IGN.es"}),"ES: Topo (IGN)");
const baselayerList={ITERATE_FIRST:0,OPENCYCLEMAP:0,MAPBOX:1,OPENSTREETMAP:2,SATELLITEESRI:3,BING:4,BINGAERIAL:5,OPENTOPOMAP:6,DETOPPLUSOPEN:7,ESTOPOIGN:8,ITERATE_LAST:8,UNKNOWN:99,properties:{0:{name:"OpenCycleMap",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},1:{name:"MapBox",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},2:{name:"OpenStreetMap",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},3:{name:"Satellite Esri",visible:!1,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},4:{name:"Bing",visible:!0,overlays:[!1,
!1,!1,!1,!1,!1,!1,!1]},5:{name:"Bing Aerial",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},6:{name:"OpenTopoMap",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},7:{name:"DE: TopPlusOpen",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},8:{name:"ES: Topo (IGN)",visible:!1,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]},99:{name:"UNKNOWN",visible:!0,overlays:[!1,!1,!1,!1,!1,!1,!1,!1]}}};
for(var i=0;i<controlLayer._layers.length;i++)if(controlLayer._layers[i]&&!controlLayer._layers[i].overlay)for(let a=baselayerList.ITERATE_FIRST;a<=baselayerList.ITERATE_LAST;a++)controlLayer._layers[a].name==baselayerList.properties[a].name&&(baselayerList.properties[a].layer=controlLayer._layers[a].layer);baselayerList.properties[baselayerList.MAPBOX].overlays[overlaysList.CONTOUR_LINES]=!0;baselayerList.properties[baselayerList.OPENSTREETMAP].overlays[overlaysList.CONTOUR_LINES]=!0;
baselayerList.properties[baselayerList.OPENSTREETMAP].overlays[overlaysList.HILL_SHADING]=!0;baselayerList.properties[baselayerList.SATELLITEESRI].overlays[overlaysList.CONTOUR_LINES]=!0;baselayerList.properties[baselayerList.SATELLITEESRI].overlays[overlaysList.ROADS_AND_LABELS]=!0;function getKnownBaselayerNames(){var a=[];for(let c=baselayerList.ITERATE_FIRST;c<=baselayerList.ITERATE_LAST;c++)a.push(baselayerList.properties[c].name);return a}
function getOverlayValues(a){var c=[];for(var b=overlaysList.ITERATE_FIRST;b<=overlaysList.ITERATE_LAST;b++)c.push(!1);for(b=baselayerList.ITERATE_FIRST;b<=baselayerList.ITERATE_LAST;b++)if(a===baselayerList.properties[b].name){c=baselayerList.properties[b].overlays.slice(0);break}return c}function setOverlayValues(a,c){for(let b=baselayerList.ITERATE_FIRST;b<=baselayerList.ITERATE_LAST;b++)a===baselayerList.properties[b].name&&(baselayerList.properties[b].overlays=c.slice(0))}
var currentBaselayer=0,currentOverlays=baselayerList.properties[0].overlays.slice(0);baselayerchange({name:baselayerList.properties[0].name});function setCurrentBaselayer(a){document.getElementsByClassName("leaflet-control-layers")[0].getElementsByTagName("input")[a].click()}function getCurrentBaselayer(){return currentBaselayer}
function baselayerchange(a){currentBaselayer=baselayerList.UNKNOWN;for(let c=baselayerList.ITERATE_FIRST;c<=baselayerList.ITERATE_LAST;c++)if(a.name===baselayerList.properties[c].name){currentBaselayer=c;break}logOverlays();baselayerList.properties[currentBaselayer].overlays.forEach(function(a,b){currentOverlays[b]!==a&&(currentOverlays[b]&&myMap.removeLayer(overlaysList.properties[b].layer),a&&overlaysList.properties[b].visible&&myMap.addLayer(overlaysList.properties[b].layer));controlLayer.removeLayer(overlaysList.properties[b].layer);
overlaysList.properties[b].visible&&controlLayer.addOverlay(overlaysList.properties[b].layer,overlaysList.properties[b].name)})}function overlayadd(a){overlayChanged(a,!0)}function overlayremove(a){overlayChanged(a,!1)}function overlayChanged(a,c){for(let b=overlaysList.ITERATE_FIRST;b<=overlaysList.ITERATE_LAST;b++)if(a.name===overlaysList.properties[b].name){currentOverlays[b]=c;baselayerList.properties[currentBaselayer].overlays[b]=c;break}logOverlays()}myMap.on("baselayerchange",baselayerchange);
myMap.on("overlayadd",overlayadd);myMap.on("overlayremove",overlayremove);function logOverlays(){};