// support for javafx11 - see https://openjfx.io/openjfx-docs/#gradle
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.7.3'
        // https://github.com/ben-manes/gradle-versions-plugin
        // task: dependencyUpdates
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.45.0'
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.google.osdetector'
//apply plugin: 'maven' // - to be removed for Gradle 7.*
apply plugin: 'maven-publish'

// see https://github.com/kelemen/netbeans-gradle-project/issues/179
apply plugin: 'idea'
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
apply plugin: 'com.github.ben-manes.versions' // provides dependencyUpdates command

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'tf.gpx.edit.main.GPXEditorManager'
}
mainClassName = 'tf.gpx.edit.main.GPXEditorManager'
def appName='GPXEditor'
group='tf.GPXEditor'
version='5.8'
description = 'GPXEditor - JavaFX GPX file editor'

repositories {
    mavenLocal() {
        // breaking change in gradle 6.*: doesn't find jar files automatically when no pom.xml is present...
        // https://discuss.gradle.org/t/how-to-fetch-maven-artifact-without-pom-file-in-gradle-6-0/33836
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
    maven {
        url "https://maven.jzy3d.org/releases"
    }
}

dependencies {
    // JavaFX11 explicit dependencies
//    def javafx_version='11.0.2'
//    def javafx_version='14'
//    def javafx_version='15.0.1'
//    def javafx_version='17.0.2'
    def javafx_version='19.0.2'
    implementation "org.openjfx:javafx-base:$javafx_version:$platform"
    implementation "org.openjfx:javafx-graphics:$javafx_version:$platform"
    implementation "org.openjfx:javafx-controls:$javafx_version:$platform"
    implementation "org.openjfx:javafx-fxml:$javafx_version:$platform"
    implementation "org.openjfx:javafx-swing:$javafx_version:$platform"
    implementation "org.openjfx:javafx-web:$javafx_version:$platform"
    implementation "org.openjfx:javafx-media:$javafx_version:$platform"
    
    // TFE, 20191209: our own helper library
    implementation 'tf.JavaHelper:JavaHelper:1.15'

    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.10.0'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.22'
    implementation 'me.himanshusoni.gpxparser:gpx-parser:1.14'
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.2'
    
    implementation 'de.jensd:fontawesomefx:8.9'
    // TFE, 20210310: not working since GlyphsDude not found
    // https://bitbucket.org/Jerady/fontawesomefx/issues/72/glyphsdude-and-package
//    compile 'de.jensd:fontawesomefx-commons:9.1.2'
//    compile 'de.jensd:fontawesomefx-emojione:3.1.1-9.1.2'
//    compile 'de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2'
//    compile 'de.jensd:fontawesomefx-icons525:4.6.3'
//    compile 'de.jensd:fontawesomefx-materialdesignfont:2.0.26-9.1.2'
//    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-9.1.2'
//    compile 'de.jensd:fontawesomefx-materialstackicons:2.1-5-9.1.2'
//    compile 'de.jensd:fontawesomefx-octicons:4.3.0-9.1.2'
//    compile 'de.jensd:fontawesomefx-weathericons:2.0.10-9.1.2'
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.14.2'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.14.2'

    implementation group: 'de.grundid.opendatalab', name: 'geojson-jackson', version: '1.14'
    implementation group: 'org.jfxtras', name: 'jfxtras-controls', version: '15-r2'
    implementation group: 'org.jfxtras', name: 'jfxtras-labs', version: '9.0-r1'
    implementation group: 'org.jfxtras', name: 'jmetro', version: '11.6.16'

    implementation 'uk.com.robust-it:cloning:1.9.12'
    
    implementation group: 'org.im4java', name: 'im4java', version: '1.4.0'
    
    // TFE, 20211222: Savitzky-Golay-Filter for track smoothing
    implementation group: 'io.github.ruozhuochen', name: 'savitzky-golay-filter', version: '1.0.1'
    
    // TFE, 20220115: 3rd alternative: fxyz3d
    implementation 'org.fxyz3d:fxyz3d:0.5.4'
    
    // TFE, 20220201: faster list
    implementation group: 'org.magicwerk.brownies', name: 'brownies-collections', version: '0.9.19'
    
    // sun data
    // TODO: upgrade to 0.1.7 and fix breaking changes
    implementation group: 'net.e175.klaus', name: 'solarpositioning', version: '0.0.9'
    
    // timezone provider
    implementation group: 'us.dustinj.timezonemap', name: 'timezonemap', version: '4.5'
    implementation group: 'com.github.luben', name: 'zstd-jni', version: '1.5.2-5'
    
    // TFE, 20220320: change to charts based on canvas for performance
    // latest version compatible with javafx 15 is for 11
    implementation 'eu.hansolo.fx:charts:17.1.27'
    // TODO: error: error reading C:\Users\thomas\.gradle\caches\modules-2\files-2.1\eu.hansolo.fx\heatmap\17.0.11\69d60f2307f1ddb380ec3f847c255cac2c77dbba\heatmap-17.0.11.jar; java.net.URISyntaxException: Illegal character in path at index 129: file:/C:/Users/thomas/.gradle/caches/modules-2/files-2.1/eu.hansolo.fx/heatmap/17.0.11/69d60f2307f1ddb380ec3f847c255cac2c77dbba/${project.name}-${project.version}.jar
    // implementation 'eu.hansolo.fx:heatmap:17.0.5'
    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.2'
    // TFE, 20221231: build a test suite for all non-UI tests
    testImplementation group: 'org.junit.platform', name: 'junit-platform-suite-engine', version: '1.9.2'
    // TFE, 20210216: capture System.err() easily
    testImplementation group: 'com.github.stefanbirkner', name: 'system-lambda', version: '1.2.1'
}

task unzip(type: Copy) {
    def zipFile = file("${buildDir}/distributions/GPXEditor-${version}.zip")
    def outputDir = file("dist")
 
    from zipTree(zipFile)
    into outputDir
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.graphics,javafx.base,javafx.fxml,javafx.web,javafx.swing,javafx.media',
                '-Xlint:unchecked',
                '-Xlint:deprecation',
        ]
    }
}

// see https://github.com/kelemen/netbeans-gradle-project/issues/403 on how to extend gradle tasks
def newArgs = [ '--add-modules', 'javafx.controls,javafx.graphics,javafx.base,javafx.fxml,javafx.web,javafx.swing,javafx.media',
                // various exports needed at run time - see https://stackoverflow.com/a/52142071
                '--add-exports', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.reflect=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.beans=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.logging=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.runtime=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.collections=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.event=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.prism=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
                '--add-exports', 'javafx.media/com.sun.media.jfxmedia=ALL-UNNAMED',
                '--add-exports', 'javafx.media/com.sun.media.jfxmedia.events=ALL-UNNAMED',
                '--add-exports', 'javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED',
                '--add-exports', 'javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED',
                '--add-exports', 'javafx.controls/com.sun.javafx.scene.control.inputmap=ALL-UNNAMED',
                '--add-exports', 'javafx.controls/com.sun.javafx.charts=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.scene.input=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.collections=ALL-UNNAMED',
                '--add-opens', 'javafx.graphics/javafx.scene.layout=ALL-UNNAMED',
                // TFE, 20200803: workaround for "WARNING: Illegal reflective access by com.rits.cloning.Cloner"
                // https://github.com/x-stream/xstream/issues/101#issuecomment-667734663
                '--add-opens', 'java.base/java.util=ALL-UNNAMED',
                '--add-opens', 'java.base/sun.util.calendar=ALL-UNNAMED',
    ]
    
// extend Netbeans Gradle "Run" task
run {
    doFirst {
        jvmArgs = jvmArgs.plus(['--module-path', classpath.asPath,])
        jvmArgs = jvmArgs.plus(newArgs)
        jvmArgs = jvmArgs.plus('-Xss80M')
        jvmArgs = jvmArgs.plus('-Xmx4096M')
        // profiler not working with netbeans...
//        jvmArgs = jvmArgs.plus('-agentpath:"C:/PROGRA~1/NetBeans-12.0/netbeans/profiler/lib/deployed/jdk16/windows-amd64/profilerinterface.dll=C:/PROGRA~1/NetBeans-12.0/netbeans/profiler/lib",5140')
//        jvmArgs = jvmArgs.plus('-agentpath:"C:/PROGRA~1/visualvm_212/visualvm/lib/deployed/jdk16/windows-amd64/profilerinterface.dll"="C:/PROGRA~1/visualvm_212/visualvm/lib",5140')
        enableAssertions = true
    }
    args = ["-mapCenter", "46.660578140310854 11.15942716598511"]
//    args = ["-mergeFiles", "P:/Pictures/Raw/GPX/*.gpx"]
}

// TFE, 20211102: not working like below
//task(runSingle) {
//    args = ["C:\\WUTemp\\feuster.com\\Pictures*C:\\WUTemp\\Temp"]
//}

test {
//    exclude '**/*'
    doFirst {
        jvmArgs = jvmArgs.plus(['--module-path', classpath.asPath,])
        jvmArgs = jvmArgs.plus(newArgs)
        jvmArgs = jvmArgs.plus('-Xss80M')
        jvmArgs = jvmArgs.plus('-Xmx4096M')
        enableAssertions = true
    }

    // https://stackoverflow.com/a/35467005
    testLogging.showStandardStreams true;   
    useJUnitPlatform()
}

// extend Netbeans Gradle "Debug" task
task(debug, dependsOn: 'classes', type: JavaExec) {
    doFirst {
        main = 'tf.gpx.edit.main.GPXEditorManager'
        classpath = sourceSets.main.runtimeClasspath
        jvmArgs = jvmArgs.plus([
                '--module-path', classpath.asPath,
                "-Xdebug",
                "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005",
        ])
        jvmArgs = jvmArgs.plus(newArgs)
        jvmArgs = jvmArgs.plus('-Xss80M')
        jvmArgs = jvmArgs.plus('-Xmx4096M')
    }
}

jar {
    manifest {
        attributes(
            'Built-By'       : System.properties['user.name'],
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
            'App-Name'       : appName,
            'App-Version'    : archiveVersion,
            'App-URL'        : "https://github.com/ThomasDaheim/GPXEditor"
        )
    }
}

sourceSets {
    main {
        resources { 
            // only use minified files
            exclude { 
                FileTreeElement elem -> ((elem.name.contains('.js') || elem.name.contains('.css')) && !elem.name.contains('.min.')) 
            }
        } 
    }  
}

build.finalizedBy(installDist)
